{"version":3,"sources":["assets/header.jpg","components/Header.js","dateFunctions.js","components/BurnWeek.js","sampleEvents.js","components/TimeSpanEditor.js","components/ConfirmDialog.js","components/LineSplitter.js","components/LocationEditor.js","assets/banner-prty.jpg","assets/banner-adlt.jpg","assets/banner-care.jpg","assets/banner-fire.jpg","assets/banner-food.jpg","assets/banner-game.jpg","assets/banner-kid.jpg","assets/banner-para.jpg","assets/banner-perf.jpg","assets/banner-work.jpg","assets/banner-othr.jpg","components/NameAndDescriptionEditor.js","validateUrl.js","components/PrintOptionsEditor.js","components/EventDialog.js","components/CheckEvent.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","marginTop","marginBottom","menuButton","marginRight","spacing","title","flexGrow","ButtonAppBar","handleNewEvent","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","onClick","startIcon","Header","src","banner","alt","yearDefault","today","Date","now","getFullYear","getMonth","burningManDates","yyyy","lastDay","sept1dow","getDay","laborDayForYear","dateMath","BurnWeek","date","this","props","range","eventOffset","React","Component","start","end","current","push","navigate","action","initialRawEvents","h","m","days","description","locationType","location","type","url","global","FormatTime","moment","hour","minute","format","ParseTime","s","result","isValid","get","TimeSpanEditor","setStart","setEnd","setDirty","useState","startInput","setStartInput","startValue","setStartValue","startIsValid","setStartIsValid","endInput","setEndInput","endValue","setEndValue","endIsValid","setEndIsValid","startTimes","eventDurations","dx","endOptions","map","thisEndMin","thisEnd","label","render","Grid","container","direction","justify","alignItems","Tooltip","arrow","placement","open","Autocomplete","id","freeSolo","disableClearable","size","style","width","marginLeft","options","inputValue","onInputChange","event","newInputValue","parsed","value","onChange","newValue","onBlur","dxMinutes","endMinutes","newEnd","renderInput","params","TextField","PopperComponent","Popper","popper","renderOption","option","getOptionLabel","Transition","forwardRef","ref","Slide","ConfirmDialog","setOpen","message","no","yes","doIt","handleClose","proceed","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","LineSplitter","children","split","i","LocationEditor","setLocation","setLocationType","Card","CardContent","FormControl","component","fullWidth","FormLabel","RadioGroup","name","e","target","x","Fragment","item","xs","FormControlLabel","control","Radio","NameAndDescriptionEditor","setTitle","setType","setDescription","setUrl","autoFocus","onFocus","currentTarget","select","InputLabel","Select","labelId","minWidth","eventTypes","et","MenuItem","code","emoji","full","multiline","validateURL","URL","_","protocol","maxCharactersForPrint","PrintOptionsEditor","submitForPrint","setSubmitForPrint","printDescription","setPrintDescription","Switch","checked","FormHelperText","length","substr","bannerPrty","bannerAdlt","bannerCare","bannerFire","bannerFood","bannerGame","bannerKid","bannerPara","bannerPerf","bannerWork","bannerOthr","BannerFromType","find","firstDay","styles","toolButton","opacity","backgroundColor","padding","margin","staticTitlebar","xmarginLeft","display","justifyContent","height","backgroundSize","backgroundRepeat","backgroundPosition","PaperComponent","handle","cancel","Paper","EventDialogWhen","d","ix","add","EventDialogStatic","show","eventError","close","setEditing","handleDelete","openConfirmDelete","setOpenConfirmDelete","DialogTitleButtons","withStyles","other","backgroundImage","eventType","maxWidth","dividers","Alert","severity","elevation","fontSize","rel","href","EventDialogEditing","setDays","save","dirty","handleCheckbox","newDays","includes","disableBackdropClick","onBackdropClick","onSubmit","preventDefault","FormGroup","row","Checkbox","labelPlacement","EventDialog","saveEvent","deleteEvent","editing","rawid","setRawId","setGlobal","setEventError","useEffect","newEvent","CheckEvent","durationInMinutes","undefined","localizer","momentLocalizer","DraggableCalendar","withDragAndDrop","Calendar","identity","forEach","CalEventsFromRawEvents","rawEvents","calEvents","toDate","App","setRawEvents","showPopup","setShowPopup","eventForPopup","setEventForPopup","globalError","setGlobalError","dblClickTimer","setDblClickTimer","newEventTemplate","atCamp","isValidDate","isNaN","moveEvent","isAllDay","diff","getHours","getMinutes","Snackbar","rawEvent","rawEventId","filter","defaultDate","defaultView","Views","WEEK","events","views","agenda","week","formats","timeGutterFormat","dayFormat","eventTimeRangeFormat","eventTimeRangeStartFormat","eventTimeRangeEndFormat","selectRangeFormat","selectable","onSelectEvent","clearTimeout","setTimeout","onSelectSlot","showMultiDayTimes","onEventDrop","onEventResize","eventPropGetter","isSelected","bgColor","fontWeight","components","toolbar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.94455951.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header.2acf46f1.jpg\";","import React from \"react\";\nimport banner from \"../assets/header.jpg\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport EventIcon from \"@material-ui/icons/Event\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"1rem\",\n    marginBottom: \"1rem\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst ButtonAppBar = ({ title, handleNewEvent }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {title}\n          </Typography>\n          <Button\n            color=\"default\"\n            onClick={handleNewEvent}\n            variant=\"contained\"\n            startIcon={<EventIcon />}\n          >\n            New Event\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport const Header = ({ title, handleNewEvent }) => {\n  // Image is from https://gallery.burningman.org/asset/e18ccfb6-4558-427e-8118-493bffe148e5?i=2&q=playa+info\n  // Photo by Jini Sachse, 2019\n\n  return (\n    <>\n      <img className=\"img-fluid w-100\" src={banner} alt=\"Playa Info\" />\n      <ButtonAppBar title={title} handleNewEvent={handleNewEvent} />\n    </>\n  );\n};\n","import * as dateMath from \"date-arithmetic\";\n\n// From December onwards, show next years' Burning Man\nexport function yearDefault() {\n  const today = new Date(Date.now());\n  return today.getFullYear() + (today.getMonth() > 10 ? 1 : 0);\n}\n\n// Labor day is first Monday in September.\nexport function laborDayForYear(yyyy) {\n  // reminder - JavaScript months are 0-11\n  const sept1 = new Date(yyyy, 8, 1);\n  const sept1dow = sept1.getDay(); // 0 = sunday\n  const laborDay = ((8 - sept1dow) % 7) + 1;\n\n  return new Date(yyyy, 8, laborDay);\n}\n\n// Burning Man is 8 days ending on Labor Day\nexport function burningManDates(yyyy) {\n  const lastDay = laborDayForYear(yyyy);\n  let firstDay = dateMath.add(lastDay, -8, \"day\");\n  return [firstDay, lastDay];\n}\n","// A custom view for the calendar that shows 9 days\n\nimport React from \"react\";\n\nimport * as dateMath from \"date-arithmetic\";\nimport TimeGrid from \"react-big-calendar/lib/TimeGrid\";\n\nexport class BurnWeek extends React.Component {\n  render() {\n    let { date } = this.props;\n    let range = BurnWeek.range(date);\n\n    return <TimeGrid {...this.props} range={range} eventOffset={15} />;\n  }\n}\n\nBurnWeek.range = (date) => {\n  let start = date;\n  let end = dateMath.add(start, 8, \"day\");\n\n  let current = start;\n  let range = [];\n\n  while (dateMath.lte(current, end, \"day\")) {\n    range.push(current);\n    current = dateMath.add(current, 1, \"day\");\n  }\n\n  return range;\n};\n\n// Navigating to previous/next week is not allowed. All events have to be\n// during BurnWeek.\nBurnWeek.navigate = (date, action) => {\n  return date;\n};\n\nBurnWeek.title = (date) => {\n  return `Burn Week ${date.getFullYear()}`;\n};\n","// This format is \"rawEvents\" which represents the\n// actual data model of playa events, in which the same\n// event can repeat on multiple days.\n//\n// It needs to be converted to \"calEvents\" format to\n// be displayed on the calendar. This involves\n// creating multiple events for any events that\n// have more than one occurrance, and converting the\n// date/time format to normal start/end times.\n\nexport const initialRawEvents = [\n  {\n    start: { h: 20, m: 0 },\n    end: { h: 2, m: 0 },\n    days: [1],\n    title: \"East Village Shirtless Dance Party\",\n    description:\n      \"Future Turtles invites you to our opening night bash. Cosmos, dance music, hugs and friendly bartenders.\",\n    locationType: \"camp\",\n    location: \"Future Turtles\",\n    type: \"prty\",\n    url: \"https://futureturtles.com\",\n  },\n  {\n    start: { h: 21, m: 0 },\n    end: { h: 23, m: 30 },\n    days: [6],\n    title: \"Man Burn\",\n    global: true,\n    location: \"The Man Base\",\n    locationType: \"other\",\n    type: \"fire\",\n    description:\n      \"Since 1986, we have gathered every summer to burn a large wooden effigy, referred to as The Man.\",\n  },\n  {\n    start: { h: 18, m: 0 },\n    end: { h: 21, m: 0 },\n    days: [7],\n    title: \"Temple Burn\",\n    global: true,\n    location: \"The Temple\",\n    locationType: \"other\",\n    type: \"fire\",\n    description:\n      \"The Temple is a community shared space that is an important part of Black Rock City. It is not a temple in recognition of any religion; it’s a neutral, non-denominational spiritual space where everyone can gather to share in the experience of remembering the past, honoring or cursing the present, and pondering the future to come.\",\n  },\n  {\n    start: { h: 11, m: 0 },\n    end: { h: 12, m: 0 },\n    days: [2, 3, 4, 5, 6],\n    title: \"Lazy workout\",\n    description:\n      \"Join the turtles for High Intensity Interval Training, only we're super lazy so it won't be that high intensity. Good music, smoothies. Bring yoga mat.\",\n    locationType: \"camp\",\n    location: \"Future Turtles\",\n    type: \"care\",\n  },\n  {\n    start: { h: 18, m: 0 },\n    end: { h: 23, m: 59 },\n    days: [2, 4],\n    title: \"Your Dreams Interpreted\",\n    description:\n      \"Visit the Future Turtles straight-friendly bar to ogle our hot bartenders, and get your dreams interpreted. Unique alcoholic and non-alcoholic cocktails every night.\",\n    locationType: \"camp\",\n    location: \"Future Turtles\",\n    type: \"prty\",\n  },\n  {\n    start: { h: 18, m: 0 },\n    end: { h: 23, m: 59 },\n    days: [3],\n    title: \"Cook yer sausage\",\n    description:\n      \"Visit the Future Turtles straight-friendly bar to ogle our hot bartenders, and cook your sausage in our deep boiling pots of fragrant water. BRING YOUR OWN SAUSAGE. (If you have a cow, you can make sausage at Farm Camp, Esplanade and 6:15). Unique alcoholic and non-alcoholic cocktails every night.\",\n    locationType: \"camp\",\n    location: \"Future Turtles\",\n    type: \"food\",\n  },\n  {\n    start: { h: 16, m: 0 },\n    end: { h: 18, m: 0 },\n    days: [4],\n    title: \"Billion Bunny March\",\n    description:\n      \"Come over to the bunny side. Hop. Wiggle your tail. Deliver colorful eggs and support a universal campaign of fluffy goodness for all. NO CARROTS\",\n    locationType: \"other\",\n    location:\n      \"Meet at Center Camp; march will proceed to the Man at 4:30 sharp\",\n    type: \"para\",\n  },\n  {\n    start: { h: 18, m: 0 },\n    end: { h: 23, m: 59 },\n    days: [5],\n    title: \"AP Calculus Study Group\",\n    description:\n      \"Trying to get a leg up before school resumes next week? Our expert instructors will cover the most important parts of Leibniz's amazing invention. Unique alcoholic and non-alcoholic cocktails will be served.\",\n    locationType: \"camp\",\n    location: \"Future Turtles\",\n    type: \"work\",\n  },\n  {\n    start: { h: 0, m: 45 },\n    end: { h: 2, m: 0 },\n    days: [6],\n    title: \"Impossibility space\",\n    description:\n      \"Storytelling from the edge of the multiverse with director Oscar Sharp\",\n    locationType: \"other\",\n    location: \"The Yurt, Echo at 4:15\",\n    type: \"perf\",\n  },\n  {\n    start: { h: 0, m: 0 },\n    end: { h: 0, m: 45 },\n    days: [2, 3, 4, 5, 6],\n    title: \"Midnight coffee\",\n    description: \"Trying to stay awake? The turtles have you sorted.\",\n    locationType: \"camp\",\n    location: \"Future Turtles\",\n    type: \"food\",\n  },\n];\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport const FormatTime = ({ h, m }) => {\n  return moment({ hour: h, minute: m }).format(\"h:mma\");\n};\n\nconst ParseTime = (s) => {\n  const m = moment(s, \"LT\");\n  let result = false;\n\n  if (m.isValid()) {\n    result = { h: m.get(\"hours\"), m: m.get(\"minutes\") };\n  }\n\n  return result;\n};\n\n// start and end format is { h: 12, m: 30 }\n// h is in 24 hour format, so {h:14, m:0} is 2pm\n// if end.h < start.h, the event goes past midnight.\n\nexport const TimeSpanEditor = ({ start, setStart, end, setEnd, setDirty }) => {\n  const [startInput, setStartInput] = useState(FormatTime(start));\n  const [startValue, setStartValue] = useState(FormatTime(start));\n  const [startIsValid, setStartIsValid] = useState(true);\n\n  const [endInput, setEndInput] = useState(FormatTime(end));\n  const [endValue, setEndValue] = useState(FormatTime(end));\n  const [endIsValid, setEndIsValid] = useState(true);\n\n  let startTimes = [];\n  for (let h = 0; h < 24; h++) {\n    for (let m = 0; m < 60; m += 15) {\n      startTimes.push(FormatTime({ h: h, m: m }));\n    }\n  }\n\n  // possible event durations in minutes\n  let eventDurations = [0, 15, 30, 45];\n  for (let dx = 60; dx <= 12 * 60; dx += 30) {\n    eventDurations.push(dx);\n  }\n\n  const endOptions = eventDurations.map((dx) => {\n    const thisEndMin = start.h * 60 + start.m + dx;\n    const thisEnd = { h: (thisEndMin / 60) % 24, m: thisEndMin % 60 };\n\n    return {\n      label: FormatTime(thisEnd),\n      render:\n        FormatTime(thisEnd) +\n        (dx < 60 ? ` (${dx} minutes)` : ` (${dx / 60} hours)`),\n    };\n  });\n\n  const WidePopper = (props) => {\n    const styles = (theme) => ({\n      popper: {\n        width: \"fit-content\",\n      },\n    });\n\n    return <Popper {...props} style={styles.popper} placement=\"bottom-start\" />;\n  };\n\n  return (\n    <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n      <span>From:</span>\n      <Tooltip\n        title=\"Invalid time\"\n        arrow\n        placement=\"top-start\"\n        open={!startIsValid}\n      >\n        <Autocomplete\n          id=\"starttime\"\n          freeSolo={true}\n          disableClearable={true}\n          size=\"small\"\n          style={{ width: \"8rem\", marginRight: \"0.5rem\", marginLeft: \"0.5rem\" }}\n          options={startTimes}\n          inputValue={startInput}\n          onInputChange={(event, newInputValue) => {\n            const parsed = ParseTime(newInputValue);\n            setStartIsValid(!!parsed);\n            setStartInput(newInputValue);\n          }}\n          value={startValue}\n          onChange={(event, newValue) => {\n            setStartValue(newValue);\n          }}\n          onBlur={() => {\n            const parsed = ParseTime(startInput);\n            if (parsed) {\n              setStartInput(FormatTime(parsed));\n              // successfully setting the start time\n              // always bumps the end time to keep\n              // the same duration\n              const dxMinutes =\n                (24 * 60 + (end.h * 60 + end.m) - (start.h * 60 + start.m)) %\n                (24 * 60);\n              const endMinutes = parsed.h * 60 + parsed.m + dxMinutes;\n              setStart(parsed);\n              setDirty(true);\n              const newEnd = { h: (endMinutes / 60) % 24, m: endMinutes % 60 };\n              setEnd(newEnd);\n              setDirty(true);\n              setEndValue(FormatTime(newEnd));\n              setEndInput(FormatTime(newEnd));\n            } else {\n              // you can't type\n              // restore original start time\n              setStartInput(FormatTime(start));\n              setStartIsValid(true);\n            }\n          }}\n          renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Tooltip>\n      <span>to</span>\n      <Tooltip\n        title=\"Invalid time\"\n        arrow\n        placement=\"top-start\"\n        open={!endIsValid}\n      >\n        <Autocomplete\n          id=\"endtime\"\n          freeSolo={true}\n          disableClearable={true}\n          size=\"small\"\n          style={{ width: \"8rem\", marginLeft: \"0.5rem\" }}\n          PopperComponent={WidePopper}\n          options={endOptions}\n          renderOption={(option) => {\n            return option.render;\n          }}\n          getOptionLabel={(option) => {\n            if (option.label) return option.label;\n            else return option;\n          }}\n          inputValue={endInput}\n          onInputChange={(event, newInputValue) => {\n            const parsed = ParseTime(newInputValue);\n            setEndIsValid(!!parsed);\n            setEndInput(newInputValue);\n          }}\n          value={endValue}\n          onChange={(event, newValue) => {\n            setEndValue(newValue);\n          }}\n          onBlur={() => {\n            const parsed = ParseTime(endInput);\n            if (parsed) {\n              setEndInput(FormatTime(parsed));\n              setEnd(parsed);\n              setDirty(true);\n            } else {\n              // you can't type\n              // restore original end time\n              setEndInput(FormatTime(end));\n              setEndIsValid(true);\n            }\n          }}\n          renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Tooltip>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const ConfirmDialog = ({\n  open,\n  setOpen,\n  title,\n  message,\n  no,\n  yes,\n  doIt,\n}) => {\n  const handleClose = (proceed) => {\n    setOpen(false);\n    if (proceed) {\n      doIt();\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              handleClose(false);\n            }}\n            color=\"primary\"\n          >\n            {no}\n          </Button>\n          <Button\n            onClick={() => {\n              handleClose(true);\n            }}\n            color=\"primary\"\n          >\n            {yes}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Typeography from \"@material-ui/core/Typography\";\n\n// utility function that converts \"text\\nwith\\nnewlines\"\n// into multiple paragraphs. That way anything entered\n// with newlines into a TEXTAREA (like the event description)\n// can be displayed, statically, with the same linespacing.\n\n// The little extra &nbsp; stuck in at the end\n// insures that \"\\n\\n\" displays with a full blank line.\n\nexport const LineSplitter = ({ children, variant }) => {\n  return (children ?? \"\").split(\"\\n\").map((s, i) => (\n    <Typeography variant={variant} key={`p${i}`}>\n      {s}&nbsp;\n    </Typeography>\n  ));\n};\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n  TextField,\n} from \"@material-ui/core\";\n\nexport const LocationEditor = ({\n  location,\n  setLocation,\n  locationType,\n  setLocationType,\n  setDirty,\n}) => {\n  const options = [\n    // [codename, label for radio button, prompt for text editor]\n    [\"camp\", \"Theme camp\", \"Camp name\"],\n    [\"art\", \"Artwork\", \"Artwork name\"],\n    [\"other\", \"Other\", \"Detailed location\"],\n  ];\n\n  return (\n    <Card style={{ marginBottom: \"1rem\" }}>\n      <CardContent>\n        <FormControl component=\"fieldset\" fullWidth>\n          <FormLabel component=\"legend\">Location</FormLabel>\n          <RadioGroup\n            aria-label=\"Location\"\n            name=\"locationtype\"\n            value={locationType}\n            onChange={(e) => {\n              setLocationType(e.target.value);\n              setLocation(\"\");\n              setDirty(true);\n            }}\n          >\n            <Grid container spacing={0}>\n              {options.map((x) => {\n                return (\n                  <React.Fragment key={x[0]}>\n                    <Grid item xs={2}>\n                      <FormControlLabel\n                        value={x[0]}\n                        control={<Radio color=\"primary\" />}\n                        label={x[1]}\n                      />\n                    </Grid>\n                    <Grid item xs={10}>\n                      {locationType === x[0] ? (\n                        <TextField\n                          fullWidth\n                          id={`${x[0]}Location`}\n                          label={x[2]}\n                          variant=\"outlined\"\n                          size=\"small\"\n                          value={location}\n                          onChange={(e) => {\n                            setLocation(e.target.value);\n                            setDirty(true);\n                          }}\n                        />\n                      ) : (\n                        \"\"\n                      )}\n                    </Grid>\n                  </React.Fragment>\n                );\n              })}\n            </Grid>\n          </RadioGroup>\n        </FormControl>\n      </CardContent>\n    </Card>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/banner-prty.2a342910.jpg\";","export default __webpack_public_path__ + \"static/media/banner-adlt.b5a0e240.jpg\";","export default __webpack_public_path__ + \"static/media/banner-care.f6952b26.jpg\";","export default __webpack_public_path__ + \"static/media/banner-fire.ef19701b.jpg\";","export default __webpack_public_path__ + \"static/media/banner-food.a1dfabf2.jpg\";","export default __webpack_public_path__ + \"static/media/banner-game.90020586.jpg\";","export default __webpack_public_path__ + \"static/media/banner-kid.37f68789.jpg\";","export default __webpack_public_path__ + \"static/media/banner-para.cec68e25.jpg\";","export default __webpack_public_path__ + \"static/media/banner-perf.0fd8c4e3.jpg\";","export default __webpack_public_path__ + \"static/media/banner-work.4e88b097.jpg\";","export default __webpack_public_path__ + \"static/media/banner-othr.58479925.jpg\";","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\nimport { eventTypes } from \"./EventDialog\";\n\nexport const NameAndDescriptionEditor = ({\n  title,\n  setTitle,\n  type,\n  setType,\n  description,\n  setDescription,\n  url,\n  setUrl,\n  setDirty,\n}) => {\n  return (\n    <Card style={{ marginBottom: \"1rem\" }}>\n      <CardContent>\n        <TextField\n          fullWidth\n          autoFocus\n          label=\"Event name\"\n          variant=\"outlined\"\n          size=\"small\"\n          value={title}\n          onFocus={(e) => e.currentTarget.select()}\n          onChange={(e) => {\n            setTitle(e.target.value);\n            setDirty(true);\n          }}\n        ></TextField>\n\n        <Grid container spacing={0} style={{ marginTop: \"2rem\" }}>\n          <Grid item xs={3}>\n            <FormControl variant=\"outlined\" size=\"small\">\n              <InputLabel id=\"type-label\">Type</InputLabel>\n              <Select\n                labelId=\"type-label\"\n                id=\"type\"\n                value={type}\n                onChange={(x) => {\n                  setType(x.target.value);\n                  setDirty(true);\n                }}\n                label=\"Type\"\n                style={{ minWidth: \"8rem\" }}\n              >\n                {eventTypes.map((et) => {\n                  return (\n                    <MenuItem\n                      value={et.code}\n                      key={et.code}\n                    >{`${et.emoji} ${et.full}`}</MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={9}>\n            <TextField\n              fullWidth\n              label=\"URL (optional)\"\n              variant=\"outlined\"\n              size=\"small\"\n              value={url}\n              onFocus={(e) => e.currentTarget.select()}\n              onChange={(e) => {\n                setUrl(e.target.value);\n                setDirty(true);\n              }}\n            ></TextField>\n          </Grid>\n        </Grid>\n\n        <TextField\n          fullWidth\n          multiline\n          label=\"Description\"\n          variant=\"outlined\"\n          value={description}\n          onChange={(e) => {\n            setDescription(e.target.value);\n            setDirty(true);\n          }}\n          style={{ marginTop: \"2rem\" }}\n        />\n      </CardContent>\n    </Card>\n  );\n};\n","export const validateURL = (s) => {\n  let url;\n\n  try {\n    url = new URL(s);\n  } catch (_) {\n    return false;\n  }\n\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n};\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  FormControlLabel,\n  FormHelperText,\n  Switch,\n  TextField,\n} from \"@material-ui/core\";\n\nconst maxCharactersForPrint = 150;\n\nexport const PrintOptionsEditor = ({\n  submitForPrint,\n  setSubmitForPrint,\n  printDescription,\n  setPrintDescription,\n  description,\n  setDirty,\n}) => {\n  return (\n    <Card>\n      <CardContent>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={submitForPrint}\n              onChange={(e) => {\n                setSubmitForPrint(e.target.checked);\n                setDirty(true);\n              }}\n              name=\"submitForPrint\"\n              color=\"primary\"\n            />\n          }\n          label=\"Submit this event to printed WhatWhereWhen guide\"\n        />\n        <FormHelperText>\n          Due to limited space, only a very small number of events can be\n          printed.\n        </FormHelperText>\n        {submitForPrint && description.length > maxCharactersForPrint && (\n          <>\n            <TextField\n              fullWidth\n              multiline\n              label={`Print description (limited to ${maxCharactersForPrint} characters)`}\n              variant=\"outlined\"\n              value={printDescription}\n              onChange={(e) => {\n                setPrintDescription(\n                  e.target.value.substr(0, maxCharactersForPrint)\n                );\n                setDirty(true);\n              }}\n              style={{ marginTop: \"2rem\" }}\n            />\n            <FormHelperText>\n              For the printed guide, we need a description that is{\" \"}\n              {maxCharactersForPrint} characters or less. You have typed{\" \"}\n              {printDescription.length}\n            </FormHelperText>\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport Draggable from \"react-draggable\";\n\nimport moment from \"moment\";\n\nimport Alert from \"@material-ui/lab/Alert\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { burningManDates, yearDefault } from \"../dateFunctions.js\";\nimport { TimeSpanEditor, FormatTime } from \"./TimeSpanEditor.js\";\nimport { ConfirmDialog } from \"./ConfirmDialog.js\";\nimport { LineSplitter } from \"./LineSplitter.js\";\nimport { LocationEditor } from \"./LocationEditor\";\n\nimport {\n  Button,\n  Card,\n  CardContent,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControlLabel,\n  FormGroup,\n  FormLabel,\n  IconButton,\n  Paper,\n} from \"@material-ui/core\";\n\nimport bannerPrty from \"../assets/banner-prty.jpg\";\nimport bannerAdlt from \"../assets/banner-adlt.jpg\";\nimport bannerCare from \"../assets/banner-care.jpg\";\nimport bannerFire from \"../assets/banner-fire.jpg\";\nimport bannerFood from \"../assets/banner-food.jpg\";\nimport bannerGame from \"../assets/banner-game.jpg\";\nimport bannerKid from \"../assets/banner-kid.jpg\";\nimport bannerPara from \"../assets/banner-para.jpg\";\nimport bannerPerf from \"../assets/banner-perf.jpg\";\nimport bannerWork from \"../assets/banner-work.jpg\";\nimport bannerOthr from \"../assets/banner-othr.jpg\";\nimport { NameAndDescriptionEditor } from \"./NameAndDescriptionEditor\";\nimport { validateURL } from \"../validateUrl.js\";\nimport { PrintOptionsEditor } from \"./PrintOptionsEditor\";\n\nexport const eventTypes = [\n  { code: \"prty\", full: \"Gathering/Party\", emoji: \"🥳\", banner: bannerPrty },\n  { code: \"adlt\", full: \"Adult oriented\", emoji: \"🔞\", banner: bannerAdlt },\n  { code: \"care\", full: \"Care/Support\", emoji: \"🧘\", banner: bannerCare },\n  { code: \"fire\", full: \"Fire\", emoji: \"🔥\", banner: bannerFire },\n  { code: \"food\", full: \"Food\", emoji: \"🍽\", banner: bannerFood },\n  { code: \"game\", full: \"Game\", emoji: \"🎲\", banner: bannerGame },\n  { code: \"kid\", full: \"Kid friendly\", emoji: \"🧸\", banner: bannerKid },\n  { code: \"para\", full: \"Parade\", emoji: \"🤸‍♀️\", banner: bannerPara },\n  { code: \"perf\", full: \"Performance\", emoji: \"🎭\", banner: bannerPerf },\n  { code: \"work\", full: \"Class/Workshop\", emoji: \"🧑‍🏫\", banner: bannerWork },\n  { code: \"othr\", full: \"Other\", emoji: \"🦄\", banner: bannerOthr }, // this has to be last\n];\n\nconst BannerFromType = (type) => eventTypes.find((x) => x.code === type).banner;\n\nconst [firstDay] = burningManDates(yearDefault());\n\nconst styles = (theme) => ({\n  toolButton: {\n    opacity: \"70%\",\n    backgroundColor: \"white\",\n    padding: \"7px\",\n    margin: \"5px\",\n    \"&:hover\": { backgroundColor: \"white\", opacity: \"100%\", color: \"blue\" },\n  },\n\n  staticTitlebar: {\n    padding: \"0 0 0 0\",\n    xmarginLeft: \"auto\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    height: \"120px\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\",\n  },\n});\n\nconst PaperComponent = (props) => {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n};\n\nconst EventDialogWhen = ({ days, start, end }) => {\n  return (\n    <div>\n      {days.map((d, ix) => (\n        <div key={`ix${ix}`}>\n          {moment(firstDay).add(d, \"days\").format(\"ddd, MMM D\")}\n        </div>\n      ))}\n      <strong>\n        {FormatTime(start)} to {FormatTime(end)}\n      </strong>\n      <em>{end.h < start.h ? \" next day\" : \"\"}</em>\n    </div>\n  );\n};\n\nconst EventDialogStatic = ({\n  show,\n  days,\n  start,\n  end,\n  description,\n  title,\n  url,\n  location,\n  locationType,\n  type,\n  global,\n  eventError,\n  close,\n  setEditing,\n  handleDelete,\n}) => {\n  const [openConfirmDelete, setOpenConfirmDelete] = React.useState(false);\n\n  const DialogTitleButtons = withStyles(styles)((props) => {\n    const { onClose, classes, ...other } = props;\n    return (\n      <DialogTitle\n        {...other}\n        className={classes.staticTitlebar}\n        style={{ backgroundImage: `url(${BannerFromType(type)})` }}\n      >\n        {!global ? (\n          <>\n            <IconButton\n              aria-label=\"edit\"\n              onClick={() => {\n                setEditing(true);\n              }}\n              color=\"primary\"\n              className={classes.toolButton}\n            >\n              <EditIcon />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              onClick={() => {\n                setOpenConfirmDelete(true);\n              }}\n              color=\"primary\"\n              className={classes.toolButton}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </>\n        ) : (\n          \"\"\n        )}\n        <IconButton\n          aria-label=\"close\"\n          onClick={close}\n          color=\"primary\"\n          className={classes.toolButton}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n    );\n  });\n\n  const eventType =\n    eventTypes.find((x) => x.code === type) ??\n    eventTypes[eventTypes.length - 1];\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth=\"sm\"\n      PaperComponent={PaperComponent}\n      open={show}\n      onClose={close}\n      aria-labelledby=\"draggable-dialog-title\"\n    >\n      <DialogTitleButtons id=\"draggable-dialog-title\"></DialogTitleButtons>\n      <DialogContent dividers>\n        {eventError ? (\n          <Alert severity=\"error\" elevation={6} variant=\"filled\">\n            {eventError}\n          </Alert>\n        ) : null}\n        <div style={{ marginBottom: \"0.1rem\", fontSize: \"150%\" }}>\n          <strong>{title}</strong>\n        </div>\n        <div style={{ marginBottom: \"2rem\" }}>\n          {eventType.emoji} {eventType.full}{\" \"}\n        </div>\n        <EventDialogWhen days={days} start={start} end={end} />\n        <br></br>\n        <LineSplitter variant=\"body1\">{description}</LineSplitter>\n        {url && validateURL(url) && (\n          <div>\n            <a target=\"_blank\" rel=\"noreferrer\" href={url}>\n              {url}\n            </a>\n          </div>\n        )}\n        <br></br>\n        <br></br>\n        <strong>Location:</strong>\n        <br />\n        {locationType === \"camp\" ? (\n          <span>Located at theme camp ({location})</span>\n        ) : locationType === \"art\" ? (\n          <span>Located at art work ({location})</span>\n        ) : (\n          <span>{location}</span>\n        )}\n\n        <ConfirmDialog\n          open={openConfirmDelete}\n          setOpen={setOpenConfirmDelete}\n          title=\"Delete this event?\"\n          message={\n            days.length > 1\n              ? `This will delete ALL ${days.length} occurences of this event. Are you sure?`\n              : \"Are you sure you want to delete this event?\"\n          }\n          no=\"Cancel\"\n          yes=\"Yes, Delete it\"\n          doIt={handleDelete}\n        />\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst EventDialogEditing = ({\n  show,\n  days,\n  setDays,\n  title,\n  setTitle,\n  description,\n  setDescription,\n  printDescription,\n  setPrintDescription,\n  url,\n  setUrl,\n  start,\n  setStart,\n  end,\n  setEnd,\n  locationType,\n  setLocationType,\n  location,\n  setLocation,\n  type,\n  setType,\n  submitForPrint,\n  setSubmitForPrint,\n  close,\n  save,\n}) => {\n  const [dirty, setDirty] = useState(false);\n\n  const handleCheckbox = (e) => {\n    var newDays = [];\n\n    for (let i = 0; i < 9; i++) {\n      if (i + \"\" === e.target.value) {\n        if (e.target.checked) newDays.push(i);\n      } else {\n        if (days.includes(i)) newDays.push(i);\n      }\n    }\n\n    setDays(newDays);\n    setDirty(true);\n  };\n\n  return (\n    <Dialog\n      open={show}\n      onClose={close}\n      fullWidth\n      maxWidth=\"md\"\n      disableBackdropClick\n      onBackdropClick={() => {\n        if (!dirty) close();\n      }}\n    >\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          setDirty(false);\n          save();\n        }}\n      >\n        <DialogContent dividers style={{ backgroundColor: \"#e0e0e0\" }}>\n          <NameAndDescriptionEditor\n            title={title}\n            setTitle={setTitle}\n            type={type}\n            setType={setType}\n            description={description}\n            setDescription={setDescription}\n            url={url}\n            setUrl={setUrl}\n            setDirty={setDirty}\n          />\n          <Card style={{ marginBottom: \"1rem\" }}>\n            <CardContent>\n              <FormLabel component=\"legend\">\n                When does this event occur?\n              </FormLabel>{\" \"}\n              <Paper variant=\"outlined\">\n                {\" \"}\n                <FormGroup row>\n                  {[\n                    \"Sun\",\n                    \"Mon\",\n                    \"Tue\",\n                    \"Wed\",\n                    \"Thu\",\n                    \"Fri\",\n                    \"Sat\",\n                    \"Sun\",\n                    \"Mon\",\n                  ].map((x, i) => (\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          color=\"primary\"\n                          value={i}\n                          checked={days.includes(i)}\n                          onChange={handleCheckbox}\n                        />\n                      }\n                      label={x}\n                      key={\"day\" + i}\n                      labelPlacement=\"bottom\"\n                    />\n                  ))}\n                </FormGroup>\n              </Paper>\n              <br />\n              <TimeSpanEditor\n                start={start}\n                setStart={setStart}\n                end={end}\n                setEnd={setEnd}\n                setDirty={setDirty}\n              />{\" \"}\n            </CardContent>\n          </Card>\n          <LocationEditor\n            location={location}\n            setLocation={setLocation}\n            locationType={locationType}\n            setLocationType={setLocationType}\n            setDirty={setDirty}\n          />\n          <PrintOptionsEditor\n            submitForPrint={submitForPrint}\n            setSubmitForPrint={setSubmitForPrint}\n            printDescription={printDescription}\n            setPrintDescription={setPrintDescription}\n            description={description}\n            setDirty={setDirty}\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={close}>\n            Cancel\n          </Button>\n          <Button color=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport const EventDialog = ({\n  show,\n  close,\n  event,\n  saveEvent,\n  deleteEvent,\n  editing,\n  setEditing,\n}) => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [printDescription, setPrintDescription] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [days, setDays] = useState([]);\n  const [start, setStart] = useState({ h: 12, m: 0 });\n  const [end, setEnd] = useState({ h: 12, m: 0 });\n  const [rawid, setRawId] = useState(0);\n  const [locationType, setLocationType] = useState(\"other\");\n  const [location, setLocation] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [submitForPrint, setSubmitForPrint] = useState(false);\n  const [global, setGlobal] = useState(false);\n  const [eventError, setEventError] = useState(false);\n\n  useEffect(() => {\n    if (show) {\n      // dialog just appeared\n      // pull out editable data from event\n      setTitle(event.title);\n      setDescription(event.description);\n      setPrintDescription(event.printDescription ?? \"\");\n      setUrl(event.url ?? \"\");\n      setDays(event.days);\n      setStart(event.start);\n      setEnd(event.end);\n      setRawId(event.id);\n      setLocation(event.location ?? \"\");\n      setLocationType(event.locationType ?? \"other\");\n      setType(event.type ?? \"othr\");\n      setSubmitForPrint(!!event.submitForPrint);\n      setGlobal(!!event.global);\n      setEventError(event.eventError);\n    } else {\n      // dialog just disappeared\n      setEditing(false);\n    }\n  }, [show, event, setEditing]);\n\n  const handleClose = () => {\n    if (event.newEvent) {\n      deleteEvent(event.id);\n    }\n    close();\n  };\n\n  const handleSave = () => {\n    saveEvent({\n      title: title,\n      description: description,\n      printDescription: printDescription,\n      url: url,\n      days: days,\n      start: start,\n      end: end,\n      id: rawid,\n      location: location,\n      locationType: locationType,\n      type: type,\n      submitForPrint: submitForPrint,\n      newEvent: false,\n    });\n    close();\n  };\n\n  const handleDelete = () => {\n    deleteEvent(rawid);\n    close();\n  };\n\n  if (editing) {\n    return (\n      <EventDialogEditing\n        show={show}\n        days={days}\n        setDays={setDays}\n        title={title}\n        setTitle={setTitle}\n        description={description}\n        setDescription={setDescription}\n        printDescription={printDescription}\n        setPrintDescription={setPrintDescription}\n        url={url}\n        setUrl={setUrl}\n        start={start}\n        setStart={setStart}\n        end={end}\n        setEnd={setEnd}\n        location={location}\n        setLocation={setLocation}\n        locationType={locationType}\n        setLocationType={setLocationType}\n        type={type}\n        setType={setType}\n        submitForPrint={submitForPrint}\n        setSubmitForPrint={setSubmitForPrint}\n        close={handleClose}\n        save={handleSave}\n      />\n    );\n  } else {\n    return (\n      <EventDialogStatic\n        show={show}\n        days={days}\n        start={start}\n        end={end}\n        description={description}\n        title={title}\n        url={url}\n        location={location}\n        locationType={locationType}\n        type={type}\n        global={global}\n        eventError={eventError}\n        close={handleClose}\n        setEditing={setEditing}\n        handleDelete={handleDelete}\n      />\n    );\n  }\n};\n","import { validateURL } from \"../validateUrl.js\";\n\n/**\n * Checks if an event has any obvious errors that will cause it to be rejected\n *\n * @param {Object} e the event (raw event format)\n * @return {(string | false)} false if event is OK, otherwise a string error message\n */\nexport const CheckEvent = (e) => {\n  let { start, end, days, title, description, locationType, url } = e;\n\n  if (end.h < start.h) {\n    // event wraps past midnight\n    end = { h: end.h + 24, m: end.m };\n  }\n  const durationInMinutes = end.h * 60 + end.m - (start.h * 60 + start.m);\n\n  if (days[0] === 0 && start.h < 18) {\n    return \"Events on opening day cannot start before 6:00pm\";\n  }\n\n  if (days.includes(8) && end.h * 60 + end.m > 18 * 60) {\n    return \"Events on final day cannot go past 6:00pm\";\n  }\n\n  if (locationType === \"art\") {\n    if (durationInMinutes > 3 * 60) {\n      return \"Events located at an artwork cannot be longer than 3 hours\";\n    }\n  }\n\n  if (durationInMinutes > 12 * 60) {\n    return \"Events may not be longer than 12 hours\";\n  }\n\n  if (title === \"New event\" || title === \"\") {\n    return \"Event needs a name\";\n  }\n\n  if (title.length < 3) {\n    return \"Event name must be at least three letters long\";\n  }\n\n  if (description === \"\" || description === undefined) {\n    return \"Event must have a description\";\n  }\n\n  if (url && !validateURL(url)) {\n    return \"URL is invalid\";\n  }\n\n  return false;\n};\n","import React, { useState } from \"react\";\n\nimport { Calendar, Views, momentLocalizer } from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.scss\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport { Header } from \"./components/Header.js\";\n\nimport moment from \"moment\";\n\nimport { burningManDates, yearDefault } from \"./dateFunctions.js\";\nimport { BurnWeek } from \"./components/BurnWeek.js\";\nimport { initialRawEvents } from \"./sampleEvents\";\nimport { EventDialog } from \"./components/EventDialog\";\nimport { CheckEvent } from \"./components/CheckEvent.js\";\n\nexport const sum = (a, b) => {\n  return a + b;\n};\n\n// Playa Events!\n\nconst localizer = momentLocalizer(moment);\nconst DraggableCalendar = withDragAndDrop(Calendar);\nconst [firstDay] = burningManDates(yearDefault());\n\n// At startup, assign each raw event an id that can be\n// used to find it later.\n//\nlet identity = 0;\ninitialRawEvents.forEach((e) => {\n  e.id = identity++;\n});\n\n// Convert rawEvents to calEvents\n//\n// rawEvents format looks like this:\n//\n// {\n//   start: { h: 20, m: 0 },\n//   end: { h: 2, m: 0 },\n//   days: [1,2,4],\n//   title: \"Party\",\n//   description:\n//     \"Future Turtles Party\",\n// }\n//\n// This function:\n//\n// - explodes multi-day events into several separate events (in the example above, there are three instances of the event)\n// - convert the start and end times to actual Dates\n//\nexport const CalEventsFromRawEvents = (rawEvents) => {\n  let calEvents = [];\n\n  rawEvents.forEach((e) => {\n    e.eventError = CheckEvent(e);\n\n    e.days.forEach((d) => {\n      calEvents.push({\n        start: moment(firstDay)\n          .add(d, \"days\")\n          .add(e.start.h, \"hours\")\n          .add(e.start.m, \"minutes\")\n          .toDate(),\n        end: moment(firstDay)\n          .add(d + (e.end.h < e.start.h ? 1 : 0), \"days\")\n          .add(e.end.h, \"hours\")\n          .add(e.end.m, \"minutes\")\n          .toDate(),\n        title: e.title,\n        id: e.id, // multiple calendar events may point to same raw event\n        global: e.global,\n        eventError: e.eventError,\n      });\n    });\n  });\n\n  return calEvents;\n};\n\nfunction App() {\n  const [rawEvents, setRawEvents] = useState(initialRawEvents);\n  const [showPopup, setShowPopup] = useState(false);\n  const [eventForPopup, setEventForPopup] = useState({});\n  const [editing, setEditing] = useState(false);\n  const [globalError, setGlobalError] = useState(false);\n  const [dblClickTimer, setDblClickTimer] = useState(null);\n\n  const newEventTemplate = {\n    title: \"New event\",\n    type: \"othr\",\n    atCamp: true,\n    locationType: \"other\",\n    newEvent: true, // this makes it so that a \"cancel\" doesn't save\n    eventError: false,\n    description: \"\",\n    url: \"\",\n    submitForPrint: false,\n  };\n\n  const newEventFromGrid = ({ start, end }) => {\n    const newEvent = {\n      ...newEventTemplate,\n      start: { h: start.getHours(), m: start.getMinutes() },\n      end: { h: end.getHours(), m: end.getMinutes() },\n      days: [moment(start).diff(firstDay, \"days\")],\n      id: identity++,\n    };\n\n    setRawEvents([...rawEvents, newEvent]);\n    setEventForPopup(newEvent);\n    setShowPopup(true);\n    setEditing(true);\n  };\n\n  const handleNewEvent = () => {\n    const newEvent = {\n      ...newEventTemplate,\n      start: { h: 12, m: 0 },\n      end: { h: 14, m: 0 },\n      days: [1],\n      id: identity++,\n    };\n\n    setRawEvents([...rawEvents, newEvent]);\n    setEventForPopup(newEvent);\n    setShowPopup(true);\n    setEditing(true);\n  };\n\n  const drillDown = (event) => {\n    // single click - show the event in static mode\n    // double click - show the event for editing\n\n    setEventForPopup(rawEvents.find((e) => e.id === event.id));\n    setEditing(false);\n\n    if (dblClickTimer) {\n      clearTimeout(dblClickTimer);\n      setDblClickTimer(null);\n      setEditing(!eventForPopup.global); // but you can never edit global events\n    }\n\n    setDblClickTimer(\n      setTimeout(() => {\n        setShowPopup(true);\n        setDblClickTimer(null);\n      }, 200)\n    );\n  };\n\n  const closeDrillDown = () => {\n    setShowPopup(false);\n  };\n\n  function isValidDate(d) {\n    return d instanceof Date && !isNaN(d);\n  }\n\n  const moveEvent = ({ event, start, end, isAllDay }) => {\n    if (!isValidDate(start) || !isValidDate(end)) {\n      // the resizing code can corrupt the new start date when events cross midnight\n      // https://github.com/jquense/react-big-calendar/issues/1598\n      return;\n    }\n\n    if (event.global) {\n      // are you trying to change the time of the man burn? good luck with that buddy\n      return;\n    }\n\n    setRawEvents(\n      rawEvents.map((e) => {\n        if (e.id === event.id) {\n          let newDays = e.days;\n\n          // only single-day events can be moved date-wise\n          // otherwise you gotta use the dialog\n          if (newDays.length === 1) {\n            newDays[0] = moment(start).diff(moment(firstDay), \"days\");\n          }\n\n          const result = {\n            ...e,\n            start: { h: start.getHours(), m: start.getMinutes() },\n            end: { h: end.getHours(), m: end.getMinutes() },\n            days: newDays,\n          };\n\n          setGlobalError(CheckEvent(result));\n\n          return result;\n        } else {\n          return e;\n        }\n      })\n    );\n  };\n\n  const saveEvent = (rawEvent) => {\n    setGlobalError(CheckEvent(rawEvent));\n\n    setRawEvents(\n      rawEvents.map((e) => {\n        if (e.id === rawEvent.id) {\n          return rawEvent;\n        } else {\n          return e;\n        }\n      })\n    );\n  };\n\n  const deleteEvent = (rawEventId) => {\n    setRawEvents(rawEvents.filter((x) => x.id !== rawEventId));\n    setGlobalError(false);\n  };\n\n  const formatEvent = (event, start, end, isSelected) => {\n    let bgColor = \"#00203F\";\n    if (event.global) {\n      bgColor = \"#E4DDCD\";\n    }\n    if (event.eventError) {\n      bgColor = \"#DC4156\";\n    }\n\n    return {\n      style: {\n        backgroundColor: bgColor,\n        color: event.global ? \"black\" : \"white\",\n        fontSize: \"0.8rem\",\n        fontWeight: 500,\n        opacity: 0.7,\n      },\n    };\n  };\n\n  return (\n    <div className=\"App\">\n      <Snackbar open={globalError !== false}>\n        <Alert severity=\"error\" elevation={6} variant=\"filled\">\n          {globalError}\n        </Alert>\n      </Snackbar>\n      <EventDialog\n        show={showPopup}\n        close={closeDrillDown}\n        event={eventForPopup}\n        saveEvent={saveEvent}\n        deleteEvent={deleteEvent}\n        editing={editing}\n        setEditing={setEditing}\n      />\n      <DraggableCalendar\n        localizer={localizer}\n        defaultDate={firstDay}\n        defaultView={Views.WEEK}\n        events={CalEventsFromRawEvents(rawEvents)}\n        style={{ height: \"100vh\" }}\n        views={{ agenda: true, week: BurnWeek }}\n        formats={{\n          timeGutterFormat: (date) => moment(date).format(\"ha\"),\n          dayFormat: (date) => moment(date).format(\"ddd, MMM D\"),\n          eventTimeRangeFormat: ({ start, end }) =>\n            moment(start).format(\"h:mma\"),\n          eventTimeRangeStartFormat: ({ start, end }) =>\n            moment(start).format(\"h:mma\"),\n          eventTimeRangeEndFormat: ({ start, end }) =>\n            moment(end).format(\"—h:mma\"),\n          selectRangeFormat: ({ start, end }) =>\n            moment(start).format(\"h:mma—\") + moment(end).format(\"h:mma\"),\n        }}\n        selectable\n        onSelectEvent={drillDown}\n        onSelectSlot={newEventFromGrid}\n        showMultiDayTimes\n        onEventDrop={moveEvent}\n        onEventResize={moveEvent}\n        eventPropGetter={formatEvent}\n        components={{\n          event: ({ event }) => {\n            return (\n              <span>\n                {!!event.eventError ? \"⚠️ \" : \"\"}\n                {event.title}\n              </span>\n            );\n          },\n          toolbar: (props) => {\n            return (\n              <Header title={props.label} handleNewEvent={handleNewEvent} />\n            );\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./custom.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}